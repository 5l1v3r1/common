#!/bin/bash -e
#
# zz-ssl-ciphers
#
# This script was instigated by John Carver 
# It provides a common set of hardened SSL/TLS ciphers fo all webserver apps
# Base configuration is provided by relevant overlay files

set ${CERTFILE:="/etc/ssl/private/cert.pem"}
set ${CRTFILE:="/usr/local/share/ca-certificates/cert.crt"}
set ${KEYFILE:="/etc/ssl/private/cert.key"}
set ${DHPARAMS:="/etc/ssl/private/dhparams.pem"}

# Secure Cipher List recommended Ivan Ristic in Bulletproof SSL and TLS
SECURE_CIPHER_LIST="ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256"

# Tomcat-suitable cipher list (uses RFC cipher suite names instead of OpenSSL)
RFC_CIPHER_LIST="TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256"

# Compatible Cipher List recommended for older clients - reduced security score
COMPATIBLE_CIPHER_LIST="ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA"

fatal() {
    echo "fatal: $@" 1>&2
    exit 1
}

# Apache2
CONF="/etc/apache2/mods-available/ssl.conf"
if [ -f "$CONF" ]; then
    sed -i "s|^\(\s*SSLCipherSuite\s\+\).*$|\1${SECURE_CIPHER_LIST}|g" $CONF    
    a2enmod ssl
    a2enconf security
fi

# Nginx
CONF="/etc/nginx/include/ssl"
if [ -f "$CONF" ]; then
    sed -i "s|ssl_ciphers '.*|ssl_ciphers '${SECURE_CIPHER_LIST}';|" $CONF
fi

# Lighttpd
CONF="/etc/lighttpd/ssl-params.conf"
if [ -f $CONF ]; then
    sed -i "s|^\(\s*ssl.cipher-list\s*=\s*\).*$|\1\"$SECURE_CIPHER_LIST\"|g" $CONF    
    lighty-enable-mod ssl
fi

# Tomcat
CONF="/etc/tomcat7/server.xml"
if [ -f $CONF ]; then
    sed -i "s|ciphers=|ciphers=\"${RFC_CIPHER_LIST}\"|" $CONF
fi

# Stunnel (provides Webmin & Webshell)
CONF="/etc/stunnel/webmin.conf /etc/stunnel/shellinabox.conf"
for conf in $CONF; do
    if [ -f "$conf" ]; then
        sed -i "s|ciphers=.*|ciphers=$SECURE_CIPHER_LIST\n|" $conf
    fi
done

# Additional Webmin
CGI=/usr/share/webmin/session_login.cgi
if [ -f $CGI ]; then
    sed -i "/Set-Cookie/ s/sec/sec; httpOnly/g" $CGI
fi
