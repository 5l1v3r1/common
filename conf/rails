#!/bin/sh -ex

RAILS_APP=railsapp
DB_USER_NAME=${RAILS_APP}_user
DB_USER_PASS=$(mcookie)

SRC=/usr/local/src

# uninstall gems installed by ruby-enterprise
for g in $(ls /usr/local/lib/ruby/gems/1.8/cache); do
    GEM_NAME=$(echo $g | sed "s|-\(.*\).gem||")
    gem uninstall -a -I -x -n /usr/local/bin $GEM_NAME
done
rm -f /usr/local/lib/ruby/gems/1.8/cache/*.gem

# install gems from overlay (rails-gems, appliance/gems.overlay)
cd $SRC/gems
gem install --local --no-rdoc --no-ri *.gem

# build and configure passenger
passenger-install-apache2-module --auto
PASSENGER=$(echo $(basename $(ls -d /usr/local/lib/ruby/gems/1.8/gems/passenger*)))
sed -i "s|PASSENGER|$PASSENGER|g" /etc/apache2/conf.d/passenger

# convenience execution variables
MYSQL_BATCH="mysql --user=root --password=$MYSQL_PASS --batch"
MYSQL_ADMIN="mysqladmin --user=root --password=$MYSQL_PASS"

# start mysql server
/etc/init.d/mysql start

# create databases for each environment
for NAME in test development production; do
    $MYSQL_ADMIN create ${RAILS_APP}_${NAME} --default-character-set=utf8;
    $MYSQL_BATCH --execute "grant all privileges on ${RAILS_APP}_${NAME}.* to $DB_USER_NAME@localhost identified by '$DB_USER_PASS'; flush privileges;"
done

# seed rails application (3.x requires new)
cd /var/www
if $(rails --version | grep -q 2.3); then
    rails ${RAILS_APP} -d mysql --skip
else
    rails new ${RAILS_APP} -d mysql --skip
fi

DB_CONF=/var/www/$RAILS_APP/config/database.yml
sed --in-place "s/^  username: root/  username: $DB_USER_NAME/g" $DB_CONF
sed --in-place "s/^  password:/  password: $DB_USER_PASS/g" $DB_CONF

# configure permissions
chown -R root:www-data /var/www/$RAILS_APP
chown -R www-data:www-data /var/www/$RAILS_APP/tmp
chown -R www-data:www-data /var/www/$RAILS_APP/log

# apache configuration
a2enmod rewrite
a2enmod proxy_balancer
a2enmod proxy_http
a2enmod proxy
a2enmod headers

a2dissite default
a2ensite $RAILS_APP

# stop mysql server
/etc/init.d/mysql stop

# cleanup
rm -rf $SRC/gems

